{"ast":null,"code":"import { TasksService } from './tasks.service';\nimport { Task } from './schema/tasks';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tasks.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TasksComponent_tr_17_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \" Yes \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TasksComponent_tr_17_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \" No \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction TasksComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 16)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TasksComponent_tr_17_td_3_Template, 2, 0, \"td\", 17);\n    i0.ɵɵtemplate(4, TasksComponent_tr_17_td_4_Template, 2, 0, \"td\", 17);\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function TasksComponent_tr_17_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.viewTask(task_r2._id));\n    });\n    i0.ɵɵtext(7, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function TasksComponent_tr_17_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteTask(task_r2._id));\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, task_r2.complete ? \"lightgreen\" : \"white\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", task_r2.task_name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r2.complete == true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r2.complete == false);\n  }\n}\nexport class TasksComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n    this.task = new Task();\n    this._id = '';\n    this.task_name = '';\n    this.complete = false;\n  }\n  ngOnInit() {\n    this.viewTasks();\n  }\n  viewTasks() {\n    this.taskService.getTasks().subscribe({\n      next: data => {\n        this.tasks = data;\n        console.log(data);\n      },\n      error: e => console.error(e)\n    });\n  }\n  viewTask(id) {\n    //var tasks=this.tasks;\n    this.taskService.viewTask(id).subscribe({\n      next: data => {\n        this.task = data;\n        this._id = this.task._id;\n        this.task_name = this.task.task_name;\n        this.complete = this.task.complete;\n      }\n    });\n  }\n  addeditTask(addoredit) {\n    const newTask = {\n      task_name: this.task_name,\n      complete: this.complete\n    };\n    if (this._id == '0') {\n      //this.taskService.addTask(newTask).subscribe(({task})=>{this.tasks.push(task);})\n      this.taskService.addTask(newTask).subscribe(data => alert('Task added'));\n    } else {\n      this.taskService.updateTask(this._id, newTask).subscribe(data => alert('Task updated'));\n    }\n  }\n  deleteTask(id) {\n    var tasks = this.tasks;\n    this.taskService.deleteTask(id).subscribe(data => {\n      // if(data.n==1){\n      for (var i = 0; i < tasks.length; i++) {\n        if (tasks[i]._id == id) {\n          tasks.splice(i, 1);\n        }\n        // }\n      }\n    });\n  }\n\n  reloadpage() {\n    window.location.reload();\n  }\n}\nTasksComponent.ɵfac = function TasksComponent_Factory(t) {\n  return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n};\nTasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TasksComponent,\n  selectors: [[\"app-tasks\"]],\n  features: [i0.ɵɵProvidersFeature([TasksService])],\n  decls: 38,\n  vars: 3,\n  consts: [[\"type\", \"button\", \"data-toggle\", \"modal\", \"data-target\", \"#myModal\", 1, \"btn\", \"btn-info\", \"btn-sm\", 3, \"click\"], [2, \"width\", \"100%\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"myModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"myModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [3, \"submit\"], [\"myForm\", \"\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"task_name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", \"name\", \"complete\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Save\", 1, \"btn\", \"btn-success\"], [3, \"ngStyle\"], [4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"]],\n  template: function TasksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r8 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Task Manager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function TasksComponent_Template_button_click_2_listener() {\n        i0.ɵɵrestoreView(_r8);\n        const _r1 = i0.ɵɵreference(27);\n        ctx._id = \"0\";\n        return i0.ɵɵresetView(_r1.reset());\n      });\n      i0.ɵɵtext(3, \"Add Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"table\", 1)(6, \"thead\")(7, \"tr\")(8, \"th\");\n      i0.ɵɵtext(9, \"Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Completed?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Delete\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, TasksComponent_tr_17_Template, 11, 6, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"div\", 4)(20, \"div\", 5)(21, \"div\", 6)(22, \"button\", 7)(23, \"span\", 8);\n      i0.ɵɵtext(24, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 9)(26, \"form\", 10, 11);\n      i0.ɵɵlistener(\"submit\", function TasksComponent_Template_form_submit_26_listener() {\n        i0.ɵɵrestoreView(_r8);\n        const _r1 = i0.ɵɵreference(27);\n        ctx.addeditTask(ctx._id);\n        ctx.reloadpage();\n        return i0.ɵɵresetView(_r1.reset());\n      });\n      i0.ɵɵelementStart(28, \"div\", 12)(29, \"div\")(30, \"label\");\n      i0.ɵɵtext(31, \"Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function TasksComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.task_name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\")(34, \"label\");\n      i0.ɵɵtext(35, \"Completed?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function TasksComponent_Template_input_ngModelChange_36_listener($event) {\n        return ctx.complete = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(37, \"input\", 15);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngModel\", ctx.task_name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.complete);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.NgStyle, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n    font-family: 'Arial', sans-serif;\\r\\n    background-color: #f4f7f6;\\r\\n    color: #333;\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n\\r\\nh1[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    color: #007bff;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n\\r\\n.btn-info[_ngcontent-%COMP%] {\\r\\n    background-color: #007bff;\\r\\n    border: none;\\r\\n    padding: 8px 15px;\\r\\n    font-size: 14px;\\r\\n    transition: 0.3s;\\r\\n}\\r\\n\\r\\n.btn-info[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0056b3;\\r\\n}\\r\\n\\r\\n.btn-outline-danger[_ngcontent-%COMP%] {\\r\\n    border: 1px solid #dc3545;\\r\\n    color: #dc3545;\\r\\n    transition: 0.3s;\\r\\n}\\r\\n\\r\\n.btn-outline-danger[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #dc3545;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n\\r\\ntable[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    border-collapse: collapse;\\r\\n    background-color: white;\\r\\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\\r\\n    border-radius: 10px;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n    padding: 12px;\\r\\n    text-align: center;\\r\\n    border-bottom: 1px solid #ddd;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%] {\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\ntbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #f1f1f1;\\r\\n}\\r\\n\\r\\n\\r\\n.modal-content[_ngcontent-%COMP%] {\\r\\n    padding: 20px;\\r\\n    border-radius: 10px;\\r\\n}\\r\\n\\r\\n.modal-header[_ngcontent-%COMP%] {\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n    border-top-left-radius: 10px;\\r\\n    border-top-right-radius: 10px;\\r\\n}\\r\\n\\r\\n.modal-header[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%] {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n    font-weight: bold;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.form-control[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 8px;\\r\\n    border: 1px solid #ddd;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\r\\n    transform: scale(1.2);\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n.btn-success[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    font-size: 16px;\\r\\n    border-radius: 5px;\\r\\n    margin-top: 15px;\\r\\n}\\r\\n\\r\\n.btn-success[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #28a745;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvdGFza3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx5QkFBeUI7QUFDekI7SUFDSSxnQ0FBZ0M7SUFDaEMseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxhQUFhO0FBQ2pCOztBQUVBLFdBQVc7QUFDWDtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsbUJBQW1CO0FBQ3ZCOztBQUVBLG1CQUFtQjtBQUNuQjtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsY0FBYztJQUNkLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0FBQ2hCOztBQUVBLGtCQUFrQjtBQUNsQjtJQUNJLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIsdUJBQXVCO0lBQ3ZCLDJDQUEyQztJQUMzQyxtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQiw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQSxpQkFBaUI7QUFDakI7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWiw0QkFBNEI7SUFDNUIsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsZ0JBQWdCO0FBQ3BCOztBQUVBLGdCQUFnQjtBQUNoQjtJQUNJLGNBQWM7SUFDZCxXQUFXO0lBQ1gsYUFBYTtJQUNiLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiLyogR2VuZXJhbCBQYWdlIFN0eWxpbmcgKi9cclxuYm9keSB7XHJcbiAgICBmb250LWZhbWlseTogJ0FyaWFsJywgc2Fucy1zZXJpZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY3ZjY7XHJcbiAgICBjb2xvcjogIzMzMztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuXHJcbi8qIEhlYWRlciAqL1xyXG5oMSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogIzAwN2JmZjtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi8qIEJ1dHRvbiBTdHlsaW5nICovXHJcbi5idG4taW5mbyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgcGFkZGluZzogOHB4IDE1cHg7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG59XHJcblxyXG4uYnRuLWluZm86aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxufVxyXG5cclxuLmJ0bi1vdXRsaW5lLWRhbmdlciB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGMzNTQ1O1xyXG4gICAgY29sb3I6ICNkYzM1NDU7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG59XHJcblxyXG4uYnRuLW91dGxpbmUtZGFuZ2VyOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkYzM1NDU7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi8qIFRhYmxlIFN0eWxpbmcgKi9cclxudGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbnRoLCB0ZCB7XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XHJcbn1cclxuXHJcbnRoIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbnRib2R5IHRyOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XHJcbn1cclxuXHJcbi8qIEZvcm0gU3R5bGluZyAqL1xyXG4ubW9kYWwtY29udGVudCB7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG5cclxuLm1vZGFsLWhlYWRlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcclxuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMHB4O1xyXG59XHJcblxyXG4ubW9kYWwtaGVhZGVyIC5jbG9zZSB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIGxhYmVsIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLmZvcm0tY29udHJvbCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG59XHJcblxyXG4vKiBTYXZlIEJ1dHRvbiAqL1xyXG4uYnRuLXN1Y2Nlc3Mge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG59XHJcblxyXG4uYnRuLXN1Y2Nlc3M6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI4YTc0NTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["TasksService","Task","i0","TasksComponent","constructor","taskService","ngOnInit","viewTasks","getTasks","subscribe","next","data","tasks","console","log","error","e","viewTask","id","task","_id","task_name","complete","addeditTask","addoredit","newTask","addTask","alert","updateTask","deleteTask","i","length","splice","reloadpage","window","location","reload","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\hp\\mean3\\Task-Manager-CRUD-Angular15-MEAN-Stack\\Frontend\\src\\app\\tasks\\tasks.component.ts","C:\\Users\\hp\\mean3\\Task-Manager-CRUD-Angular15-MEAN-Stack\\Frontend\\src\\app\\tasks\\tasks.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TasksService } from './tasks.service';\r\nimport { Task } from './schema/tasks';\r\n\r\n\r\n@Component({\r\n  selector: 'app-tasks',\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.css'],\r\n  providers:[TasksService]\r\n})\r\nexport class TasksComponent {\r\n  tasks: Task[]=[];\r\n  task: Task = new Task;\r\n  _id:string='';\r\n  task_name:string='';\r\n  complete:boolean=false;\r\nconstructor(private taskService:TasksService){\r\n\r\n}\r\n\r\nngOnInit(){\r\nthis.viewTasks();\r\n\r\n}\r\n\r\nviewTasks(){\r\n  this.taskService.getTasks().subscribe({\r\n    next: (data:any) => {\r\n      this.tasks = data;\r\n      console.log(data);\r\n    },\r\n    error: (e:any) => console.error(e)\r\n  });\r\n}\r\n\r\nviewTask(id:any){\r\n //var tasks=this.tasks;\r\nthis.taskService.viewTask(id).subscribe({next:(data:any)=>{\r\n  this.task=data;\r\n  this._id=this.task._id;\r\n  this.task_name=this.task.task_name;\r\n  this.complete=this.task.complete;\r\n}})\r\n}\r\n\r\n\r\naddeditTask(addoredit:any){\r\n\r\n  const newTask={\r\n    task_name:this.task_name,\r\n    complete:this.complete\r\n  }\r\n  if(this._id=='0'){\r\n    //this.taskService.addTask(newTask).subscribe(({task})=>{this.tasks.push(task);})\r\n    this.taskService.addTask(newTask).subscribe(data=>alert('Task added'));\r\n  }\r\n  else {\r\n    this.taskService.updateTask(this._id,newTask).subscribe(data=>alert('Task updated'));\r\n  }\r\n\r\n}\r\n\r\n\r\ndeleteTask(id:any){\r\n  var tasks=this.tasks;\r\nthis.taskService.deleteTask(id).subscribe(data=>{\r\n // if(data.n==1){\r\n    for (var i=0;i<tasks.length;i++){\r\n      if(tasks[i]._id==id){\r\n        tasks.splice(i,1);\r\n      }\r\n   // }\r\n  }\r\n})\r\n}\r\n\r\nreloadpage(){\r\n  window.location.reload();\r\n}\r\n\r\n}\r\n","\r\n<h1>Task Manager</h1>\r\n<button type=\"button\" class=\"btn btn-info btn-sm\" data-toggle=\"modal\" data-target=\"#myModal\" (click)=\"_id='0';myForm.reset();\" >Add Task</button>\r\n<hr>\r\n    <table style=\"width:100%;\">\r\n      <thead>\r\n        <tr>\r\n            <th>Task</th>\r\n            <th>Completed?</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>    \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let task of tasks\" [ngStyle]=\"{'background-color': task.complete ? 'lightgreen' : 'white'}\">\r\n            <td>\r\n                {{task.task_name}}\r\n            </td>\r\n            <td *ngIf=\"task.complete==true\">\r\n                Yes                \r\n            </td>\r\n            <td *ngIf=\"task.complete==false\">\r\n                No\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-info btn-sm\" data-toggle=\"modal\" data-target=\"#myModal\" (click)=\"viewTask(task._id)\">Edit</button>\r\n            </td>\r\n            <td>\r\n                <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteTask(task._id)\" >Delete</button>\r\n            </td>\r\n        </tr>  \r\n      </tbody>  \r\n    </table>\r\n  <!-- Modal -->\r\n  <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <!-- <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5> -->\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <form #myForm (submit)=\"addeditTask(_id);reloadpage();myForm.reset();\">\r\n                <div class=\"form-group\">\r\n                  <div>\r\n                    <label>Task</label>\r\n                    <input type=\"text\" [(ngModel)]=\"task_name\"  name=\"task_name\" class=\"form-control\">\r\n                  </div>\r\n                  <div>\r\n                    <label>Completed?</label>\r\n                    <input type=\"checkbox\" [(ngModel)]=\"complete\" name=\"complete\">\r\n                  </div>\r\n                </div>\r\n                <input type=\"submit\" class=\"btn btn-success\" value=\"Save\" >\r\n            </form>             \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}